Avocet Landscape Companion module Java Scripts

Started 17-07-23

TODO : Modify main.js to read list of button names from json file generated by the
       python script. This may ultimately become a list of dictionaries as we may need to
       pass the button ids too to allow the to be automatically configured.

18-09-23

1. Modification to companion_cuespanel.py to wrap serial.open() call in try/except
   if an exception occurs call again without setting parity/timeout.
   This sems to be required for zihatec which throws an exception the second open
15-09-23

1. Added send test message option.
2. Improvements to ordering of setting up the GPIO bit and openning the serial port got
   the zihatec port /dev/ttyAMA0
   
14-09-23

1. Modifications to python script.
        a. Allowed GPIO Bit to be set High at start for zihatec RS422 port
                Config setting : set_gpio_bit
                Type : bool
                Default : false
                Settings : true/false

        b. Added setting in config file to disable flushing as did not work 
           on zihatec port - returned error code 25

                Config Setting : enable_serial_flush
                Type : bool
                Default : true
                Settings : true/false

12-09-23

1. Changed "Example Feedback" event name to "Panel Button State"

06-09-23 

1. Tidying up of modules as requested by BitFocus. Carried out on ZVM7

10-08-23

1. Added write_pid_file() to companion_cuespanel.py
2. Started working on auto start as deamon of cues panel python script.
3. Used started init.d script
	Modified to run using python
	Added --chuid 1001:1001 to set uid and gid to companion
4. Need to add --make-pidfile and --remove-pidfile to InitScript/cuespanel 
   as cuespanel must run as companion and cannot write to the /var/run ( ->/run)
   directory.

09-08-23

1. Added support for Comms status indication using COMMS button
2. Added periodic update of feedback file. Given that updates are 
   "event" driven, that event being the arrival of a file in the feedback
   directory if an event is missed the status of the panel could be wrong for
   a long time. Hence modified it to write file every 30 second.

08-08-23

1. Added flush_serial() function to clear input buffer on startup
2. Added support for 0x04 command - switch off all lamps
3. Improvements to Landscape cpnctrl to not exit on write error
	Restore state of lamps on re-connect
4. Reduced python script serial port timeout defined in open() to 0.002
   which is calculated from maximum duration of message as being 44 bits 
   at 38400 baud
5. Started working on Comms State indicator

07-08-23

1. Modification to companion_cuespanel.py\set_button_state() to write
   button state file to temp file and setting the modified time to a
   historic value. Then moving it into place and finally chaning the
   modified time to the current time.

2. Added wait for serial port to be connected
3. Added config.json config file to allow serial port to be specified.
4. Minor log message changes.
5. Corrected er_report() call on detecting serial port. Changed to debug_print()

Set python script version to v0.1.0.0

04-08-23

1. Modifications to python serial line handling to use a stream orientated
   approach.
2. Increased serial line poll rate. Change sleep from 0.01 to 0.001
3. Modified handling of feedback file so instead of using a single file - data.json
   I am now using 10 files used in sequence being 0 to 9.json and changing the
   file I write to each time so as to ensure we are not overwriting a file 
   due to a succession of button changes with zero interval time. This was 
   causing file read and json parsing exceptions in the companion javascript.
   The number is handled by the python script using an attribute of the set_button_state()
   function dictionary - ie set_button_state.file_index. The watcher in main.js will
   always get the modified filename in the correct order. This seems to have much improved
   the problem but still seeing some expections on parsing the json file in 
   main.js\startFileWatcher() if we have three buttons flashing.


03-08-23

1. Added ./config directory to file structure
2. Modified python script to write button names list to config directory.
3. Modified main.js to use readFileSync() to read config file written by
   python script and use as list of button names.
4. Modified python script set button state method to write the file to a tmp file
   then move it to avoid problems with javascript detecting event before write 
   has compeleted.
5. Added find_id_for_button() to find the id to be passed to the Landscape
   from the name received in the json file from the companion code.
6. Changed the message building for button hits to append the button id
   based on the name received and the id from the button table instead of
   the id received in the file as is user assigned and could be wrong.
7. Converted the button number to hex before appending to the message.
8. Working on changing serial line reading mechanism to a more stream based approach.



02-08-23

1. Testing of companion_cuespanel.py with writing feedback file.
2. Added global dictionary to map button ids to names
3. Introduced main() function and command line option handling to allow for silent running.

01-08-23

1. Created new python functions to write the feedback/data.json from the python script.
2. Incorporated said functions ( first into cuespanel2.py to create cuespanel3.py )
3. Took functions from cuespanel3.py and incorporated into companion_cuespanel.py

21-07-23

1. First pass working version of feedback mechanism using a json file to pass state of all
   buttons. 

	File located in : /home/companion/python/feedback
	Filename : data.json

	Valid state values : off, on, flash

	Example :-

[
        {
                "button": "HOLD",
                "state": "off"
        },
        {
                "button": "MCUE",
                "state": "off"
        },
        {
                "button": "TAKE",
                "state": "on"
        },
        {
                "button": "SSWAP",
                "state": "flash"
        }
]
 
2. Modification to feedbacks.js - Disabled test code to start flashing using id value
3. Modification to main.js to check m_is_flashing before setting, this avoids setting multiple
   flash ticks and all lamps flashing in phase.

20-07-23 (Ben's Birthday )

1. Working on implementation of button flash timing - added m_list<string,Dictionary> type mechanism
   to hold button status as there is only one module instance for all buttons.
2. Started working on file watcher for feedback control.

Work started on 17-07-23 building up understanding of how Companion works. Was not considered worthwhile
creating this file before 20-07-23

